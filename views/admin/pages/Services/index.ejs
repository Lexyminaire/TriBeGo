<!DOCTYPE html>
<html lang="en">
  <%- include('../../layouts/header.ejs') %>
  <body>

    <%- include('../../layouts/navigation.ejs') %>

    <div class="admin-service min-h-full mx-10 table-text">
        <div class="flex-between">
          <div>
            <h1>SERVICES</h1>
          </div>
          <div class="btn-create" onclick="openCreateModal()">
            Create
          </div>
        </div>
        <table class="rwd-table ">
          <tbody>
            <tr>
              <th>Id</th>
              <th>Title</th>
              <th>Description</th>
              <th class="text-center">Action</th>
            </tr>
            <% data.forEach(value => { %>
              <tr>
                <td>
                  <%= value._id  %>
                </td>
                <td>
                  <%= value.Title  %>
                </td>
                <td>
                  <%= value.Description  %>
                </td>
                <td class="text-center action">
                  <div class="flex gap-1">
                    <div class="btn-edit" onclick="openEditModal('<%= JSON.stringify(value) %>')">
                      <div >Edit</div>
                    </div>
                    <div class="btn-delete" onclick="openDeleteModal('<%= value._id %>')">
                        <div>Delete</div>
                    </div>
                  </div>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
    </div>

    <div id="createModal" class="modal">
      <div class="modal-content">
        <span class="close" onclick="closeCreateModal()">&times;</span>
          <form id="createForm" method="post" action="/service/create" enctype="multipart/form-data">
            <div>
              <label for="createTitle">Title</label>
              <input type="text" placeholder="Title" id="createTitle" name="createTitle">
            </div>
            <div>
              <label for="createDescription">Description</label>
              <input type="text" placeholder="Description" id="createDescription" name="createDescription">
            </div>
            <div>
              <label for="image">Image</label>
              <input type="file" id="image" name="image">
            </div>
            <button type="submit">Submit</button>
          </form>

      </div>
    </div>

    <div id="deleteModal" class="modal">
      <div class="modal-content">
        <span class="close" onclick="closeDeleteModal()">&times;</span>
        <p>Are you sure you want to delete this service?</p>
        <div class="flex gap-1">
          <div>
            <button onclick="confirmDelete()" type="submit" class="px-4 py-2 text-center rounded-lg bg-red-600 hover:bg-red-400 text-white w-full h-full">Yes</button>
          </div>
          <div>
            <button onclick="closeDeleteModal()">No</button>
          </div>
        </div>
      </div>
    </div>


    <%- include('../../layouts/footer.ejs') %>
  </body>
</html>

<script>
  let idForDelete = null; 

  function openCreateModal() {
    var createModal = document.getElementById("createModal");
    createModal.style.display = "flex";

    document.getElementById("createForm").action = "/service/create/";
    document.getElementById("createTitle").value = "";
    document.getElementById("createDescription").value = "";

    const createForm = document.getElementById("createForm");

    createForm.addEventListener('submit', async (event) => { 
      const Title = document.getElementById('createTitle').value; 
      const Description = document.getElementById('createDescription').value; 

      event.preventDefault() 
      const userData = { Title: Title,  Description: Description,  }; 
      const formData = new FormData();
      formData.append('data', JSON.stringify(userData)); 
      formData.append('galleryImage', document.getElementById('image').files[0]);


    // console.log(userData)
    // console.log(Title)
      await fetch('/api/create/services', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        console.log(data);
      })
      .catch(error => {
        console.error('Error:', error);
      }).finally(() => {
        location.reload()
      });
    });
  }


  function closeCreateModal() {
    var createModal = document.getElementById("createModal");
    createModal.style.display = "none";
  }

  function openEditModal(data) {
    var editModal = document.getElementById("createModal");
    editModal.style.display = "flex";

    const item = JSON.parse(data);

  

    document.getElementById("createForm").action = "/service/update/" + item._id + '?_method=PATCH';
    document.getElementById("createTitle").value = item.Title
    document.getElementById("createDescription").value = item.Description

    const createForm = document.getElementById("createForm");

    createForm.addEventListener('submit', async (event) => { 
      const Title = document.getElementById('createTitle').value; 
      const Description = document.getElementById('createDescription').value; 

      event.preventDefault() 
      const userData = { Title: Title,  Description: Description  }; 
      const formData = new FormData();
      formData.append('data', JSON.stringify(userData)); 
      formData.append('galleryImage', document.getElementById('image').files[0]);

    // console.log(userData)
    // console.log(Title)

      await fetch('/api/update/services/' + item._id, {
        method: 'PUT',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        location.reload()
      })
      .catch(error => {
        console.error('Error:', error);
      }).finally(() => {
        location.reload()
      })
    });

  }

  
  async function confirmDelete() {
    await fetch('/api/services/' + deletedId, {
      method: 'DELETE',
    })
    .then(response => response.json())
    .then(data => {
      console.log(data);
    })
    .catch(error => {
      console.error('Error:', error);
    }).finally(() => {
      location.reload()
    });


    closeDeleteModal();
  }

  const deleteForm = document.getElementById("deleteForm")

  let deleteId = null
  deleteForm.addEventListener("submit", (e) => {
    e.preventDefault();
    confirmDelete(deleteId)
  })

  function openDeleteModal(id) {
    var deleteModal = document.getElementById("deleteModal");
    deleteModal.style.display = "flex";
    
    deletedId = id;
  }


  function closeDeleteModal() {
    var deleteModal = document.getElementById("deleteModal");
    deleteModal.style.display = "none";
  }



</script>

<style>
.modal {
  display: none;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 99999; 
}


.modal-content {
  background: white;
  padding: 30px;
  position: relative;
  margin: auto; 
}


.close {
  position: absolute;
  top: 0;
  right: 0;
  margin: 10px;
  background-color: red;
  width: 20px;
  height: 20px;
  font-size: 20px;
  display: flex; 
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: 800;
  cursor: pointer; 
  border-radius: 100%;
}


</style>




